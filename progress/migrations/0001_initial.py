# Generated by Django 5.0.4 on 2025-05-19 14:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exercises', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(verbose_name='Description')),
                ('icon', models.CharField(default='fa-trophy', max_length=50, verbose_name='Icône')),
                ('points', models.PositiveIntegerField(default=10, verbose_name='Points')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Récompense',
                'verbose_name_plural': 'Récompenses',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RewardItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(verbose_name='Description')),
                ('image', models.ImageField(blank=True, null=True, upload_to='rewards/', verbose_name='Image')),
                ('points_cost', models.PositiveIntegerField(default=50, verbose_name='Coût en points')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Objet de récompense',
                'verbose_name_plural': 'Objets de récompense',
                'ordering': ['points_cost', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('content', models.TextField(verbose_name='Contenu')),
                ('period_start', models.DateField(verbose_name='Début de période')),
                ('period_end', models.DateField(verbose_name='Fin de période')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Rapport de progression',
                'verbose_name_plural': 'Rapports de progression',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserReward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_acquired', models.DateTimeField(auto_now_add=True, verbose_name="Date d'acquisition")),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='progress.rewarditem', verbose_name='Récompense')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Récompense utilisateur',
                'verbose_name_plural': 'Récompenses utilisateurs',
                'ordering': ['-date_acquired'],
            },
        ),
        migrations.CreateModel(
            name='ProgressRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.PositiveSmallIntegerField(default=1, verbose_name='Niveau de compétence')),
                ('exercises_completed', models.PositiveIntegerField(default=0, verbose_name='Exercices complétés')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('exercise_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='exercises.exercisetype', verbose_name="Type d'exercice")),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Enregistrement de progression',
                'verbose_name_plural': 'Enregistrements de progression',
                'ordering': ['user', 'exercise_type'],
                'unique_together': {('user', 'exercise_type')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_earned', models.DateTimeField(auto_now_add=True, verbose_name="Date d'obtention")),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='progress.achievement', verbose_name='Récompense')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Récompense utilisateur',
                'verbose_name_plural': 'Récompenses utilisateurs',
                'ordering': ['-date_earned'],
                'unique_together': {('user', 'achievement')},
            },
        ),
    ]
