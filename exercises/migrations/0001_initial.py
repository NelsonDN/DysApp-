# Generated by Django 5.0.4 on 2025-05-19 14:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('instructions', models.TextField(verbose_name='Instructions')),
                ('difficulty', models.PositiveSmallIntegerField(choices=[(1, 'Facile'), (2, 'Moyen'), (3, 'Difficile')], default=1, verbose_name='Difficulté')),
                ('estimated_time', models.PositiveSmallIntegerField(default=10, verbose_name='Temps estimé (minutes)')),
                ('points', models.PositiveIntegerField(default=50, verbose_name='Points à gagner')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': 'Exercice',
                'verbose_name_plural': 'Exercices',
                'ordering': ['exercise_type', 'difficulty', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(default='fa-tasks', max_length=50, verbose_name='Icône')),
                ('color', models.CharField(default='#4E54C8', max_length=20, verbose_name='Couleur')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
            ],
            options={
                'verbose_name': "Catégorie d'exercice",
                'verbose_name_plural': "Catégories d'exercices",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de début')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Date de fin')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Score')),
                ('max_score', models.PositiveIntegerField(default=100, verbose_name='Score maximum')),
                ('time_spent', models.PositiveIntegerField(default=0, verbose_name='Temps passé (secondes)')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Est terminé')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='exercises.exercise', verbose_name='Exercice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_attempts', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Tentative d'exercice",
                'verbose_name_plural': "Tentatives d'exercices",
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ExerciseType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('disorder_type', models.CharField(choices=[('dyslexia', 'Dyslexie'), ('dyscalculia', 'Dyscalculie'), ('both', 'Les deux')], default='both', max_length=20, verbose_name='Type de trouble')),
                ('icon', models.CharField(default='fa-tasks', max_length=50, verbose_name='Icône')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercise_types', to='exercises.exercisecategory', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': "Type d'exercice",
                'verbose_name_plural': "Types d'exercices",
                'ordering': ['category', 'name'],
            },
        ),
        migrations.AddField(
            model_name='exercise',
            name='exercise_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='exercises.exercisetype', verbose_name="Type d'exercice"),
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='Texte de la question')),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Choix multiple'), ('true_false', 'Vrai ou faux'), ('matching', 'Association'), ('drag_drop', 'Glisser-déposer'), ('fill_blank', 'Texte à trous'), ('audio', 'Audio'), ('visual', 'Visuel')], default='multiple_choice', max_length=20, verbose_name='Type de question')),
                ('image', models.ImageField(blank=True, null=True, upload_to='questions/', verbose_name='Image')),
                ('audio', models.FileField(blank=True, null=True, upload_to='questions/audio/', verbose_name='Audio')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Ordre')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='exercises.exercise', verbose_name='Exercice')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['exercise', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(verbose_name='Texte de la réponse')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Est correcte')),
                ('feedback', models.TextField(blank=True, verbose_name='Feedback')),
                ('image', models.ImageField(blank=True, null=True, upload_to='answers/', verbose_name='Image')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='Ordre')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='exercises.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Réponse',
                'verbose_name_plural': 'Réponses',
                'ordering': ['question', 'order'],
            },
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_response', models.TextField(blank=True, verbose_name='Réponse textuelle')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Est correcte')),
                ('response_time', models.PositiveIntegerField(default=0, verbose_name='Temps de réponse (secondes)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='exercises.answer', verbose_name='Réponse')),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='exercises.exerciseattempt', verbose_name='Tentative')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='exercises.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Réponse à une question',
                'verbose_name_plural': 'Réponses aux questions',
                'ordering': ['attempt', 'question'],
            },
        ),
    ]
